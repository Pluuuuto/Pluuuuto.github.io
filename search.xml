<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Shell学习</title>
      <link href="/2024/01/07/Shell%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/01/07/Shell%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="shell">Shell</h1><h2 id="概念">概念</h2><h4 id="shell-1">Shell</h4><p>解释执行用户输入的命令或程序等，交互式</p><p>Shell是一块包裹着系统核心的壳，处于操作系统的最外层，与用户直接对话，把用户的输入解释给操作系统，然后处理操作系统的输出结果，输出到屏幕给与用户看到结果</p><h4 id="shell脚本">Shell脚本</h4><p>命令或程序写在文件中，执行文件读取代码，这样的程序文件称为Shell脚本，非交互式</p><p>Windows中存在<code>*.bat</code>批处理脚本，Linux中常用<code>*.sh</code>脚本文件</p><h2 id="shebang">Shebang</h2><p>指的是文件开头的两个字符<code>#!</code> ，后跟解释器名称</p><p>①以<code>#!/bin/sh</code>开头的文件调用的是bash解释器</p><p>②以<code>#!/usr/bin/python</code>开头的文件调用的是python解释器</p><p>③以<code>#!/usr/bin/env 解释器名</code>开头的文件调用的是指定解释器</p><p>④若文件未指明Shebang，脚本执行的时候默认是当前Shell作为解释器，可以通过<code>echo $SHELL</code>指令查看</p><h3 id="执行shell脚本的方式">执行Shell脚本的方式</h3><p>①文件无x权限或脚本未指定Shebang时，使用<code>解释器名 script.sh</code>，提权<code>chmod +x script.sh</code></p><p>②文件有x权限可以使用<code>绝对/相对路径</code></p><p>③<code>source script.sh</code>或<code>. script.sh</code></p><p>④利用重定向写入符号<code>解释器名 &lt; script.sh</code>，这个命令会运行script.sh脚本，并将其内容作为输入传递给Shell解释器</p><figure><img src="Shell学习/image-20240106134537311.png"alt="image-20240106134537311" /><figcaption aria-hidden="true">image-20240106134537311</figcaption></figure><h2 id="bash特性">Bash特性</h2><p>①文件路径tab键补全</p><p>②命令补全</p><p>③快捷键 ctrl + a，e，u，k，l</p><p>④通配符</p><p>⑤history</p><p><code>echo $HISTFILE</code>查看历史命令</p><p><code>! 历史id</code>快速执行历史命令</p><p><code>!!</code>调用上一条命令</p><h2 id="shell语言">Shell语言</h2><h3 id="变量">变量</h3><h4 id="定义">定义</h4><p>Shell脚本语言是一种弱类型语言，无需声明变量类型，默认字符串；标识符规则与C类似</p><h4 id="赋值">赋值</h4><p>Shell变量赋值不得有空格，会被识别为命令+参数等；单引号强引用，不识别特殊符号，双引号识别，反引号括起来的返回的是命令执行结果，相当于<code>$()</code></p><h4 id="查值">查值</h4><p><code>echo $变量名</code>或<code>echo $&#123;变量名&#125;</code></p><h4 id="作用域">作用域</h4><p>普通变量作用域是当前Shell（<code>pstree</code>查看进程树），切换Shell变量会丢失</p><p>每次调用解释器执行脚本都会开启一个子Shell，完毕后回到父Shell中，因此脚本中变量的定义赋值不会被保留；若采用<code>source</code>或<code>.</code>的方式执行脚本会在当前Shell执行</p><h4 id="环境变量">环境变量</h4><h5 id="配置文件">配置文件</h5><p>用户个人：<code>~/.bash_profile</code>、<code>~/.bashrc</code>，是远程登陆用户特有文件</p><p>全局配置文件：<code>/etc/profile</code>、<code>/etc/bashrc</code></p><p>以个人配置文件优先加载变量</p><h5 id="检查系统环境变量的命令">检查系统环境变量的命令</h5><p><code>set</code>输出当前Shell所有变量，包括全局变量与局部变量（sh脚本中定义的变量），<code>declare</code>相同</p><p><code>env</code>显示全局变量，<code>export</code>显示环境变量</p><h5 id="撤销环境变量">撤销环境变量</h5><p><code>unset</code>删除变量或函数</p><h5 id="设置只读变量">设置只读变量</h5><p><code>readonly</code>当前Shell结束只读变量失效</p><h5 id="环境变量文件加载顺序">环境变量文件加载顺序</h5><p><code>/etc/profile</code> -&gt;<code>/etc/profile.d</code>目录下的脚本 -&gt;<code>~/.bash_profile</code> -&gt; <code>~/.bashrc</code> -&gt;<code>/etc/bashrc</code></p><h4 id="特殊变量">特殊变量</h4><figure><img src="Shell学习/image-20240106004329246.png"alt="image-20240106004329246" /><figcaption aria-hidden="true">image-20240106004329246</figcaption></figure><h5 id="补充">补充</h5><p>$$ 当前Shell脚本的进程号</p><p>$_ 取得上次执行命令的最后一个参数</p><h3 id="基础内置命令bash">基础内置命令（Bash）</h3><h4 id="echo">echo</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-n 不换行输出</span><br><span class="line">-e 解析字符串中的特殊符号</span><br><span class="line">printf 打印命令</span><br></pre></td></tr></table></figure><h4 id="eval">eval</h4><p>执行多个命令，分号隔开</p><h4 id="exec">exec</h4><p>不创建子进程执行后续命令，执行完毕后exit</p><h3 id="父子shell">父子Shell</h3><p>父Shell的PID是子Shell的PPID</p><p><code>ps</code>进程管理命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br><span class="line">-f 显示UID，PID，PPID</span><br><span class="line">-e 列出所有进程信息，与 -a 相同</span><br><span class="line">--forest 以树形结构展示进程之间的父子关系</span><br></pre></td></tr></table></figure><p>每次调用解释器都会开启一个子Shell，exit可以退出回到父Shell中</p><h4 id="进程列表">进程列表</h4><p>用<code>()</code>括起来的命令会作为一个进程列表，创建子Shell，<code>()</code>可以嵌套</p><p>用子Shell进行多进程处理，可以提高并发执行效率</p><h4 id="内置外置命令">内置/外置命令</h4><p>外置命令运行更慢，并且会开启子进程执行；<code>type</code>命令判断命令为内置/外置，<code>compgen -b</code>列出内置命令</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记（六）</title>
      <link href="/2023/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
      <url>/2023/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="dhcp">6.1 DHCP</h2><p>自动分配的内容包括：IP地址、子网掩码、默认（缺省）网关、DNS服务器</p><p>服务器不能用DHCP</p><p>DHCP服务器的两大工作：租约请求（UDP）、租约续订</p><h3 id="工作流程">工作流程</h3><p>租用请求：源IP是0.0.0.0，目的IP是255.255.255.255，以MAC地址为主机标识</p><p>租用提供：目的IP是255.255.255.255</p><p>租用选择：与请求时相同</p><p>租用确认：与提供时相同</p><h3 id="租用续约">租用续约</h3><p><img src="image-20231222000709029.png" /></p><p>APIPA</p><p><img src="image-20231222000811798.png" /></p><p>流程</p><p>租用请求：源IP是上次给的IP，目的IP是DHCP服务器的IP，以MAC地址为主机标识</p><p>租用提供：目的IP是上次给的IP</p><p>租用选择：与请求时相同</p><p>租用确认：与提供时相同</p><p><strong>路由器隔离广播域，交换机隔离冲突域但不隔离广播域</strong></p><p><img src="image-20231222001115306.png" /></p><h2 id="dns">6.2 DNS</h2><p>DNS使用TCP和UDP（主要）的53端口</p><p>每一级域名长度限制63字符，总长度253字符，最后其实有一个点（.）</p><p><img src="image-20231222001348558.png" /></p><p>查询过程</p><p><img src="image-20231222002122742.png" /></p><p>递归查询不问过程只要结果</p><p><strong>域名与IP地址不是一一映射的</strong></p><h2 id="万维网">6.3 万维网</h2><h3 id="www工作流程">www工作流程</h3><p><img src="image-20231222002721556.png" /></p><h3 id="url">URL</h3><p><img src="image-20231222002823289.png" /></p><h3 id="http">HTTP</h3><p><img src="image-20231222002942391.png" /></p><p>HTTP 1.1相较于1.0持续连接、流水线方式</p><h3 id="http代理">HTTP代理</h3><p><img src="image-20231222003557889.png" /></p><h4 id="cookie">cookie</h4><p><img src="image-20231222003650652.png" /></p><h2 id="电子邮件">6.4 电子邮件</h2><h3 id="mua">MUA</h3><p><img src="image-20231222003811006.png" /></p><h3 id="mta和mda">MTA和MDA</h3><p><img src="image-20231222003848811.png" /></p><p>以下是随便写的...</p><p><img src="image-20231222004137734.png" /></p><h2 id="ftptftptelnet">6.5 FTP/TFTP/TELNET</h2><p>FTP是TCP，两个TCP连接，两种模式port、passive</p><p>TFTP是UDP，局域网，停等协议</p><p>TELNET是TCP，击键和命令转为NVT</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记（五）</title>
      <link href="/2023/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2023/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="传输层基本功能与udp协议">5.1 传输层基本功能与UDP协议</h2><h3 id="传输层功能">传输层功能</h3><p>传输层提供应用进程间的逻辑通信，且提供复用与分用功能</p><h3 id="udp协议">UDP协议</h3><p>无连接、不可靠</p><p>提供的数据单位协议是UDP报文或用户数据报（<strong>不做数据的划分</strong>）</p><p><img src="image-20231221225105915.png" /></p><p>报文格式</p><p><img src="image-20231221225240560.png" /></p><p>此处可以看出为什么上一章中ICMP报头需要包括IP数据报报头和数据前8个字节，因为前8个字节就是UDP数据报的报头，包含了进程（端口）</p><p>计算校验和：二进制反码求和</p><h3 id="tcp协议">TCP协议</h3><p>面向连接、可靠、开销更大</p><p><strong>不提供广播、多播</strong></p><p>提供的数据单位协议是TCP报文段</p><h3 id="基于端口标识进程">基于端口标识进程</h3><p><img src="image-20231221224846688.png" /></p><p>熟知端口号</p><p><img src="image-20231221224918165.png" /></p><p>记住TCP+UDP</p><h2 id="tcp协议-1">5.2 TCP协议</h2><p>面向连接、可靠、字节流、点到点、单位为段</p><p>报文结构</p><p><img src="image-20231221225723648.png" /></p><p>重要的字段</p><p><img src="image-20231221225955722.png" /></p><p><img src="image-20231221230037783.png" /></p><p><img src="image-20231221230238111.png" /></p><p><img src="image-20231221230323094.png" /></p><h2 id="tcp协议连接管理">5.3 TCP协议连接管理</h2><h3 id="tcp连接">TCP连接</h3><p>TCP连接的端点叫做套接字（socket)=（IP地址：端口号），每一条TCP连接被通信两端两个套接字所确定</p><h3 id="三次握手">三次握手</h3><p><img src="image-20231221231123421.png" /></p><p>第三次握手确保发送的不是旧的请求</p><h3 id="释放连接四次握手">释放连接四次握手</h3><p><img src="image-20231221231704901.png" /></p><h2 id="tcp协议可靠传输">5.4 TCP协议可靠传输</h2><h3 id="可靠传输原理">可靠传输原理</h3><p>超时重传机制</p><h3 id="停等协议">停等协议</h3><p>分组错误、分组丢失、确认丢失、确认收到</p><p>简单但信道利用率低</p><h3 id="流水线协议">流水线协议</h3><h3 id="滑动窗口协议">滑动窗口协议</h3><h3 id="tcp滑动窗口">TCP滑动窗口</h3><h3 id="tcp重传定时器">TCP重传定时器</h3><p><img src="image-20231221233946109.png" /></p><p><img src="image-20231221234103046.png" /></p><h3 id="其他定时器">其他定时器</h3><p>持续定时器、保活定时器、等待控制定时器</p><h3 id="tcp协议拥塞控制">5.5 TCP协议拥塞控制</h3><p>UDP没有拥塞控制能力</p><p><img src="image-20231221234652149.png" /></p><h3 id="慢开始和拥塞避免">慢开始和拥塞避免</h3><p><img src="image-20231221234806355.png" /></p><p><img src="image-20231221234946979.png" /></p><p>注意第二轮的阈值时上一轮拥塞时的一半</p><h3 id="快重传和快恢复">快重传和快恢复</h3><p><img src="image-20231221235100133.png" /></p><p><img src="image-20231221235255378.png" /></p><h3 id="随机早期检测网络层">随机早期检测（网络层）</h3><p>应用于路由器队列管理</p><p><img src="image-20231221235417607.png" /></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记（四）</title>
      <link href="/2023/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2023/12/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="网络层功能和ip协议">4.1 网络层功能和IP协议</h2><h3 id="网络层功能">网络层功能</h3><p>路由、寻址、网络互联、为上层提供服务</p><h3 id="网络层服务">网络层服务</h3><p>虚电路：提供高质量服务，典例ATM网络，通信需要提前建立虚电路</p><p>数据报（主要）：网络有高容错性（鲁棒性）、可靠性</p><p><img src="image-20231221191444338.png" /></p><h3 id="网络层协议">网络层协议</h3><p><img src="image-20231221191659413.png" /></p><h3 id="ip协议">IP协议</h3><p>无连接、不可靠</p><p><strong>帧格式</strong></p><p><img src="image-20231221191849865.png" /></p><p>版本：占4位，目前为4（在不断发展中）</p><p>首部长度：占4位，单位是双字（即32位，一般16位为一个字），但IP首部的固定部分是20字节，因此首部长度字段最小值为5，且首部长度最大为60字节（15*32/8）</p><p>总长度： 不超过最大传送单元MTU</p><p>标识：表明同一用户信息的不同数据段</p><p>标识（Flags）与片偏移</p><p><img src="image-20231221193825984.png" /></p><p>后续</p><p><img src="image-20231221194137892.png" /></p><p><img src="image-20231221194244235.png" /></p><p>填充字段保证报文32位对齐</p><h2 id="arp协议icmp协议">4.2 ARP协议/ICMP协议</h2><h3 id="arp协议">ARP协议</h3><p>MAC地址是固定的，ARP负责从网络层使用的IP地址解析出数据链路层的MAC地址，解析结果存储在主机缓存中，命令arp-a；一般在局域网内使用，与其他局域网需要路由网关</p><p><strong>帧格式</strong></p><p><img src="image-20231221195238244.png" /></p><h3 id="icmp协议">ICMP协议</h3><p>差错控制</p><p><strong>帧格式</strong></p><p><img src="image-20231221195717780.png" /></p><p>ICMP协议封装在IP协议中，IP协议封装在以太网协议中</p><p><img src="image-20231221195809376.png" /></p><p><strong>ICMP报文有效数据包括IP数据报报头与有效数据前8个字节</strong>，前8个字节包括了传输层中的端口号</p><h3 id="icmp命令">ICMP命令</h3><p>ping tracert（linux中是Trace route）</p><h2 id="ip地址">4.3 IP地址</h2><p>IP地址比MAC地址更有层次结构</p><p>局域网内主机的默认网关是连接的路由器的端口</p><p>子网掩码区分网络号与主机号进而区分远程和本地主机</p><h3 id="ip地址分类折半划分">IP地址分类（折半划分）</h3><p>A类子网掩码255.0.0.0，范围1.0.0.0-126.0.0.0，第一位0</p><p>B类255.255.0.0，范围128.0.0.0-191.255.0.0，前两位10</p><p>C类255.255.255.0，范围192.0.0.0-223.255.255.0，前三位110</p><p>D类前四位1110</p><p>E类前五位11110</p><h3 id="私网ip">私网IP</h3><p><img src="image-20231221202556872.png" /></p><h3 id="特殊ip">特殊IP</h3><p><img src="image-20231221202632653.png" /></p><p><strong>所有网段中全0（网络地址）和全1（广播地址）的地址是不可使用的（划分出的子网中的也是）</strong></p><h2 id="子网超网和cidr">4.4 子网、超网和CIDR</h2><p>子网：掩码借用网络号</p><p><img src="image-20231221204204431.png" /></p><p>超网：掩码借用主机号，也称路由聚合</p><h2 id="路由">4.5 路由</h2><h3 id="转发">转发</h3><p><img src="image-20231221205111710.png" /></p><p>路由表中都是网络地址，将目的地址与子网掩码相与，查看是否与路由表中的某项网络地址匹配，出现多个匹配项时，选择最长前缀匹配地址</p><p>转发过程中源、目的MAC变化，IP不变化</p><h2 id="路由算法">4.6 路由算法</h2><h3 id="分类">分类</h3><p><img src="image-20231221211901868.png" /></p><p>自治系统（AS）：内部采用一致路由策略</p><h3 id="路由协议">路由协议</h3><p>内部网关路由协议：RIP、OSPF</p><p>外部网关路由协议：BGP</p><h3 id="路由算法-1">路由算法</h3><p>距离矢量路由</p><p>链路状态路由：迪杰斯特拉算法，分组中包括序号和年龄（路由器重启问题）</p><p><img src="image-20231221212818612.png" /></p><h2 id="内部网关路由协议">4.7 内部网关路由协议</h2><h3 id="rip协议基于距离矢量路由">RIP协议（基于距离矢量路由）</h3><p><img src="image-20231221213118495.png" /></p><p>注意最大跳数是15跳</p><p><strong>避免环路机制</strong></p><p><img src="image-20231221213439818.png" /></p><p><strong>RIP定时器</strong></p><p><img src="image-20231221213551379.png" /></p><p>RIPv2格式</p><p><img src="image-20231221213722112.png" /></p><p>命令字段1为请求，2为响应</p><h3 id="ospf协议">OSPF协议</h3><p><img src="image-20231221213954217.png" /></p><p>报文格式</p><p><img src="image-20231221214101245.png" /></p><p>五种类型的OSPF分组</p><p><img src="image-20231221214321241.png" /></p><p>工作流程</p><p><img src="image-20231221214409844.png" /></p><h2 id="外部网关路由协议和多播路由协议">4.8外部网关路由协议和多播路由协议</h2><h3 id="bgp协议">BGP协议</h3><p><img src="image-20231221214800483.png" /></p><p>BGP的五种报文</p><p><img src="image-20231221215037059.png" /></p><p>报文格式</p><p><img src="image-20231221215111420.png" /></p><h3 id="多播">多播</h3><p>应用：会员点播</p><p>多播需要硬件多播地址支持，解决方法如下</p><p><img src="image-20231221215512357.png" /></p><p>多播需要成员管理协议</p><p>IGMP协议</p><p><img src="image-20231221215910851.png" /></p><p>工作流程略</p><p>多播需要多播路由协议</p><p>RPB、隧道技术，具体略</p><h2 id="路由器">4.9 路由器</h2><p>结构略</p><p>路由和转发</p><p>转发表硬件、路由表软件</p><p><strong>不分片</strong></p><p>略</p><p>略</p><p>略</p><h2 id="vpnnatmpls">4.10 VPN/NAT/MPLS</h2><h3 id="vpn">VPN</h3><p>分类：内联网、外联网、远程接入</p><h3 id="nat">NAT</h3><p>多内网主机共用外网IP</p><h3 id="mpls">MPLS</h3><p>略</p><h2 id="ipv6">4.11 IPv6</h2><h3 id="主要目标">主要目标</h3><p><img src="image-20231221222128138.png" /></p><h3 id="主要特点">主要特点</h3><p><img src="image-20231221222205002.png" /></p><h3 id="报文格式">报文格式</h3><p>略</p><h3 id="ipv6地址">IPv6地址</h3><p>单播、多播、任意播（通常是最近的一个）</p><p>连续的0允许压缩，但只允许一次</p><p>IPv4可记为：：128.10.2.1</p><p>CIDR斜线记法仍适用</p><p><img src="image-20231221223207704.png" /></p><p><img src="image-20231221223219562.png" /></p><p>本地链路单播地址即IPv4中的私有IP地址</p><p><img src="image-20231221223252267.png" /></p><p>够长，可以直接把MAC写进来，因此不需要ARP</p><h3 id="两类地址的过渡">两类地址的过渡</h3><p><img src="image-20231221223354246.png" /></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行收发邮件</title>
      <link href="/2023/11/24/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6/"/>
      <url>/2023/11/24/%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%94%B6%E5%8F%91%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>win11下telnet客户端默认是关闭的，首先打开telnet</p><p>控制面板-程序-程序与功能-启用或关闭Windows功能</p><p><img src="1.png" /></p><h3 id="发送邮件">发送邮件</h3><p>cmd中telnet远程登录163邮箱smtp服务器，端口号25</p><p><ahref="https://blog.csdn.net/gongqinglin/article/details/115975619">各种邮箱收发服务器地址及端口</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet smtp.<span class="number">163</span>.com <span class="number">25</span></span><br></pre></td></tr></table></figure><p><strong>注意：以下过程，telnet中输入任何字符如果有错，该条命令就需要回车重新写，就算回退重写只是表面改变了，实际还是接着输入，运行一定会报错或输出不符预期</strong></p><p>向服务器打招呼,看是否得到正确回应（有的服务器是ehlo）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helo hi</span><br></pre></td></tr></table></figure><p>选择 auth login登录方式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth login</span><br></pre></td></tr></table></figure><p>输入base64编码后的用户名密码（用户名不带@163.com），Authenticationsuccessful验证成功</p><p>接着输入发件人邮箱、收件人邮箱，输入data开始写信</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mail from:&lt;发件人邮箱地址&gt;</span><br><span class="line">rcpt to:&lt;收件人邮箱地址&gt;</span><br><span class="line">data //开始写信的内容</span><br></pre></td></tr></table></figure><p>输入邮件主题</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">subject:<span class="title">hi</span></span></span><br></pre></td></tr></table></figure><p>空一行之后输入内容</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello world!</span><br></pre></td></tr></table></figure><p>写完后输入</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.</span><br></pre></td></tr></table></figure><p>进入收件人邮箱查看，有该邮件</p><p>以下是完整过程与结果截图</p><p><img src="2.png" /></p><h3 id="接收邮件">接收邮件</h3><p>pop3接收邮件，qq的端口号110，<strong>注意此处是110</strong>，QQ官网上给的995是SSL加密的端口</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet pop.qq.com <span class="number">110</span></span><br></pre></td></tr></table></figure><p>先得在qq邮箱中启用pop3</p><p><img src="3.png" /></p><p><img src="4.png" /></p><p>授权码复制一下，等下password可以输授权码</p><p>登录pop3后，输入用户名、授权码</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user 用户名</span><br><span class="line">pass 授权码</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list //查看所有邮件</span><br></pre></td></tr></table></figure><p><img src="6.png" /></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">retr <span class="number">63</span> //retr命令查看邮件内容</span><br></pre></td></tr></table></figure><p><img src="7.png" /></p><p>此外还有命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dele //删除邮件（非真正删除，而是标记删除）</span><br><span class="line">rset //恢复删除</span><br><span class="line">quit //退出时会把所有标记删除的邮件删除</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd </tag>
            
            <tag> 邮件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记（三）</title>
      <link href="/2023/11/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/11/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="数据链路层基本功能">3.1 数据链路层基本功能</h2><h3 id="封装成帧最重要">封装成帧（最重要）</h3><p>字符计数法、特殊字符界定法、特殊位串界定法（以01111110为帧的边界，正文中每5个1强制后面添0）、物理层编码违例法（以特殊波形作为帧的边界）</p><h3 id="透明传输">透明传输</h3><p>帧定界符：SOH（Start Of Header，ASCII码01）、EOT（End OfTransmission，ASCII码04），都是不可打印字符。当传送的帧是用文本文件组成的帧（文本文件中的字符都是从键盘上输入的），那么不管输入什么样的字符都可以放在帧中传输过去，称为透明传输。当数据中有SOH、EOT时会被数据链路层误判为帧的边界，因此在这样的数据前添加转义字符ESC</p><h3 id="差错控制">差错控制</h3><p><strong>检错码</strong></p><p>循环冗余校验CRC：n位冗余码（FCS帧检验序列）是由数据M添加n个0后除以n+1位除数P得到的余数，接收端将M与FCS拼接后除以相同的除数，余数为0正常，余数不为0丢弃</p><p><strong>纠错码</strong></p><p><strong>海明码</strong></p><h3 id="流量控制">流量控制</h3><p>滑动窗口协议、停等协议</p><h3 id="链路管理">链路管理</h3><p>建立、维持、释放连接</p><h2 id="ppp协议">3.2 PPP协议</h2><h3 id="链路类型">链路类型</h3><p>广播链路-&gt;MAC协议，点到点链路-&gt;PPP协议</p><h3 id="ppp协议功能">PPP协议功能</h3><p>成帧方法、链路控制协议LCP、网络层选项协商方法NCP</p><h3 id="ppp协议帧的格式">PPP协议帧的格式</h3><p><img src="3.2-1.png" /></p><p>Flag字段表示帧的边界</p><p>Add地址字段</p><p>Ctrl控制字段，实际内容为03，为了以后升级可以添加其他控制信息</p><p>协议字段可以通过协商为1个字节</p><p>FCS检验字段，通过协商可以是4个字节</p><h3 id="ppp协议透明传输">PPP协议透明传输</h3><p>异步传输（按字节顺序）：字符填充法，0x7E定界，信息字段中的0x7E变为0x7D和0x5E，若再出现0x7D，0x7D变为0x7D和0x5D；若出现ASCII码的控制字符（即数值小于Ox20的字符），则在该字符前面要加入一个Ox7D字节，同时将该字符的编码加以改变</p><p>同步传输（按时间顺序）：以01111110为帧的边界，正文中每5个1强制后面添0</p><h3 id="ppp协议工作流程">PPP协议工作流程</h3><p><img src="屏幕截图%202023-12-21%20101540.png" /></p><h3 id="ppp协议无差错控制">PPP协议无差错控制</h3><p>①数据链路层出现差错概率不大，使用简单的PPP协议</p><p>②PPP协议主要承载的是IP数据报，IP协议本身是不可靠、无连接的</p><p>③PPP协议中的FCS字段可以保证无差错接受</p><h2 id="局域网mac协议">3.3 局域网MAC协议</h2><p>局域网数据链路层采用广播式通信，节点可以访问网内其他节点，是单位、家庭接入网络主要形式</p><h3 id="网卡">网卡</h3><p>实现CSMA/CD和CSMA/CA协议的设备、进行数据的串/并行转换和缓存、需要在计算机操作系统安装设备驱动程序</p><p><img src="image-20231221103755831.png" /></p><p>此处的硬件地址即MAC地址</p><h3 id="mac地址">MAC地址</h3><p>可采用6字节或2字节，用 - 分割或 : 分割或不分割都可</p><p>6字节MAC地址的前3字节为组织唯一标识符，即厂商标识，后3字节为拓展唯一标识符，厂商自行指派，保证不重复</p><p>适配器接收到MAC帧时首先检查地址字段是否为本站，不是则丢弃，混杂模式的网卡可收下所有的帧</p><p>IEEE规定地址字段第一字节的最低位为I/G位，发往本地的地址包括以下三种</p><p>单播（一对一）帧：I/G位=0</p><p>广播（一对所有）帧：I/G位=1</p><p>多播（一对多）帧：48位地址全为1</p><h3 id="多址接入协议">多址接入协议</h3><p><img src="image-20231221121751529.png" /></p><p>固定多址接入协议对应物理层的TDM、FDM、CDM，SDMA是空（空间）分复用</p><h3 id="随机多址接入协议">随机多址接入协议</h3><p>完全随机：</p><p>纯ALOHA：产生数据立即发送，不考虑信道占用情况，冲突的报文被丢弃，发生冲突后随机延迟</p><p>时隙的ALOHA：在上面基础上改为报文长度固定、必须在一个时隙内传输（即时间被分为时隙，报文必须在时隙开始处发送）</p><p>（载波侦听多址协议）CSMA：</p><p>非坚持：当节点监听到信道忙时，随机后延一段时间再来监听</p><p>1-坚持：节点发送数据前，先监听信道，若信道忙则一直监听直到空闲，一空闲立刻发送（其实要等9.6μs的最小帧间间隔）</p><p>P-坚持：同上，但空闲时以P的概率发送数据，1-P的概率推迟</p><h2 id="csmacd协议">3.4 CSMA/CD协议</h2><p>有线局域网以太网采用的MAC协议</p><p>两个基本特点：不可靠、无连接，采用曼彻斯特编码方式</p><p><img src="image-20231221154425445.png" /></p><p>电磁波在1km电缆的传播时延约5μs</p><h3 id="争用期">争用期</h3><p>CSMA/CD采用1-坚持，端到端往返时延2τ称为争用期，大小为51.2μs，以太网规定最短帧长64字节，即512bit，从而对于10Mbit/s的以太网，发送512bit的时间就是51.2μs，即争用期大小</p><p>经过争用期这段时间还没有检测到碰撞，就肯定此次发送不会发生碰撞</p><h3 id="beb二进制指数退避算法">BEB（二进制指数退避）算法</h3><p><img src="image-20231221162109560.png" /></p><p>发送数据的站检测到冲突后，还会发送32bit或48bit的人为干扰信号，<strong>且这个信号发送在BEB算法之前</strong></p><h3 id="csmacd协议帧格式">CSMA/CD协议帧格式</h3><p><img src="image-20231221164319609.png" /></p><p>注意头部的8bit前同步码与帧开始定界符</p><p>以太网规定帧间最小间隔为9.6μs</p><h2 id="无线网mac协议">3.5 无线网MAC协议</h2><h3 id="无线网络">无线网络</h3><p>WPAN（无线个域网）-&gt; WLAN（无线局域网）-&gt; WMAN（无线城域网）-&gt; WWAN（无线广域网）</p><p>支持WPAN主流技术：ZigBee（自组织网络形式建立网络拓扑）、蓝牙（标准为IEEE802.15.1）</p><p>WMAN的典型无线宽带接入城域网技术标准WiMAX</p><p>WWAN是蜂窝通信系统的主要解决方案</p><p>WLAN协议主要是802.11协议</p><h3 id="bss基本业务集">802.11 BSS（基本业务集）</h3><p>BSS：存在接入点（AP），负责集内工作站之间的通信</p><p>IBSS：独立的基本业务集，无接入点，又称移动自组网模式（Adhoc），所有节点都是无线通信</p><p>业务集由SSID标识，BSS中的BSSID可以理解为AP的MAC地址</p><p>ESS：通过骨干网将多个BSS串联起来形成，同一个ESS内的SSID相同</p><p>DS（分布式系统）：通过AP将无线局域网与有线局域网相连</p><h2 id="csmaca协议">3.6 CSMA/CA协议</h2><h3 id="面临的问题">802.11面临的问题</h3><p>隐藏终端问题、暴露终端问题</p><h3 id="帧间间隔">帧间间隔</h3><p>SIFS：一次交互过程中，两帧之间的间隔</p><p>PIFS：点协调方式下（AP控制下）访问信道的时间间隔</p><p>DIFS：两次业务之间的时间间隔</p><p>EIFS：前一帧出错时，需要延迟的时间间隔</p><h3 id="信道预约流程">信道预约流程</h3><p><img src="image-20231221175006078.png" /></p><p>CSMA/CD是冲突检测，CA是冲突避免（设备限制无法边发送边监听）</p><h3 id="beb算法">BEB算法</h3><p>退避窗口默认开始为[0,31]个slot，发生一次重传后，竞争窗口在[0,63]个slot中随机选取一个，每发生一次重传，竞争窗口就移至下一个2的指数，六次封顶</p><h3 id="帧结构">802.11帧结构</h3><p><img src="image-20231221184305524.png" /></p><p>字段内容略（太多了不想学...</p><h2 id="物理层和数据链路层网络互联设备">3.7物理层和数据链路层网络互联设备</h2><h3 id="物理层">物理层</h3><p>集线器（中继器的集中）、中继器</p><h3 id="数据链路层">数据链路层</h3><p><strong>网桥</strong>：生成树算法</p><p><strong>交换机</strong>：</p><p>通过地址学习过程将端口与MAC地址对应，泛洪</p><p>转发有存储转发（检查差错）与直通转发两种工作方式</p><p>划分VLAN（虚拟局域网）：基于端口划分、基于MAC地址、根据网络层、基于组播（后两种不适合局域网）</p><p>链路类型：访问（Access）与干路（Trunk）（多个VLAN之间的通信）</p><p>干道链路两端，输出端口会剥离VLAN标签，基于802.1Q帧</p><p><img src="image-20231221190440290.png" /></p><p>如上图，802.1Q是基于802.11帧的，添加了Tag字段，PRI字段表示优先级</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记（二）</title>
      <link href="/2023/11/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/11/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="物理层">2.1 物理层</h2><p>物理层的协议常被称为规程（procedure）</p><p>数字信号离散，模拟信号连续</p><p>每秒钟传播码元的数目称为波特率</p><p>没有经过调制称为基带信号，仅对波形进行变换称为基带调制，也称编码；使用载波进行调制，把基带信号的频率范围搬移到较高的频段，并转换为模拟信号称为带通调制</p><h3 id="编码方式">编码方式</h3><p>不归零制、归零制、曼彻斯特编码（自同步）、差分曼彻斯特编码（线路可以反接但成本高）</p><h3 id="带通调制调幅调频调相">带通调制：调幅、调频、调相</h3><h3 id="信道最大数据速率">信道最大数据速率</h3><p>奈氏（无噪声条件）：$ C = 2Hlog_2L b/s $</p><p>香农（有噪声条件）：$ C = Hlog_2(1+S/N) b/s $</p><p>H 为信道带宽，L 为码元种类数（相位、调制方式等不同而不同），S为信道内所传信号的平均功率，N 为信道内部的高斯噪声功率</p><p>在理想低通（无噪声，带宽受限）条件下，为了避免码间串扰，极限码元传输速率为2H</p><h3 id="信噪比db-10-log_10sn">信噪比（dB）= 10 $ log_{10}(S/N) $</h3><h2 id="传输介质与多路复用">2.2 传输介质与多路复用</h2><h3 id="有线介质">有线介质</h3><p>双绞线：非屏蔽UTP、屏蔽STP，RJ45接口分为T-568A和T-568B（最常见接线线序）</p><p>光纤：单模原理绕射、多模原理反射</p><p><img src="2.2-1.png" /></p><h3 id="无线介质">无线介质</h3><p><img src="2.2-2.png" /></p><h3 id="多路复用">多路复用</h3><p>时分复用TDM（同步异步）、频分复用FDM（收音机；波分复用即光的频分复用）、码分复用CDM（自己和自己内积1，自己和反码内积-1，站点码元与码片内积1表示发送1，内积-1表示发送0，内积0表示未发送）</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记（一）</title>
      <link href="/2023/11/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/11/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是计算机网络">1.1 什么是计算机网络</h2><p>计算机网络是<strong>通信技术</strong>与<strong>计算机技术</strong>相结合，实现<strong>信息传输</strong>和<strong>资源共享</strong>的一种信息系统</p><h2 id="计算机网络体系结构">1.2 计算机网络体系结构</h2><p>有无确认即可不可靠</p><h3 id="面向连接的服务电话">面向连接的服务（电话）：</h3><p>可靠的消息流：报文系列、网上下载完整页面</p><p>可靠的字节流：远程登录、ftp下载通过缓冲区分批下载</p><p>不可靠的连接：数字化声音（视频、直播）</p><h3 id="无连接的服务邮政">无连接的服务（邮政）：</h3><p>不可靠的数据报：电子函件</p><p>有确认的数据报：挂号邮件、快递</p><p>问答：数据查询</p><h3 id="协议三要素语法语义同步">协议三要素：语法、语义、同步</h3><h2 id="osi参考模型">1.3 OSI参考模型</h2><p>根据计算机网络的定义，将其分为通信子网（通信技术）与资源子网（计算机技术）</p><h3 id="通信子网">通信子网</h3><p>物理层：比特流传输</p><p>数据链路层：规范相邻节点的转发</p><p>网络层：寻址和路由</p><h3 id="资源子网">资源子网</h3><p>传输层：屏蔽通信子网统一接口</p><p>会话层：不同业务之间的同步、恢复会话中断前状态</p><p>表示层：数据格式转换、压缩、加密</p><p>应用层：与用户交互（分配IP地址、域名解析）</p><p><img src="1.3-1.png" /></p><p>数据链路层分为逻辑链路控制子层与媒体访问控制子层（已弱化）</p><p>网络层+：网络互联、为上层提供虚连接或数据报服务</p><p>路由：</p><p><img src="1.3-2.png" /></p><h3 id="路由算法">路由算法</h3><p>静态：扩散法、固定路由选择、随机路由选择、基于流量的路由选择</p><p>动态：独立路由选择、集中路由选择、分布式路由选择</p><h3 id="传输质量控制">传输质量控制</h3><p>分ABC类网络分别提供不同级别的服务</p><p>简单法、基本错误恢复类、多路复用类、错误恢复和多路复用类、错误检测和恢复类</p><h3 id="会话层">会话层</h3><p>+活动管理，是一个概念上的层，功能很弱，往往合并于传输层或应用层</p><h3 id="表示层">表示层</h3><p>也是一个概念上的层，通常在应用层实现，实际上的数据加密在应用层（加密对象具体信息块、文件）、传输层（通信进程、会话）、网络层（两个节点间所有通信）、数据链路层实现</p><h3 id="应用层">应用层</h3><p>+路由协议（部分，意味着路由协议不全在网络层），分为与通信相关和与通信无关两种</p><h2 id="tcpip参考模型">1.4 TCP/IP参考模型</h2><p><img src="1.4-1.png" /></p><p><img src="1.4-2.png" /></p><h3 id="应用层-1">应用层</h3><p>所谓套接字(Socket)，就是对网络中不同主机上的应用进程之间进行双向通信的端点的抽象。一个套接字就是网络上进程通信的一端，提供了应用层进程利用网络协议交换数据的机制。<span class="math display">\[Socket\ =\ IP\ address\ +\ TCP\ or\ UDP\ port\]</span>端口号分为服务器端口号与客户端端口号，服务器端口号往往是知名端口号，如80端口是TCP端口，为http开放；53端口是UDP端口，为DNS服务器开放。客户端端口号不固定，从1024以上随机产生，小于1024的端口被知名端口占用了，如上上面两个</p><h3 id="传输层">传输层</h3><p>多播或广播通信只能选择UDP协议，因为它是无连接的，单播通信TCP/UDP都可</p><p>TCP大文件，因为它是可靠的，保证数据正确完整性，UDP小文件，信道利用率高，快速发送数据</p><h3 id="网络层">网络层</h3><p>核心IP协议，ARP协议在逻辑地址（IP地址）与物理地址（网卡地址）建立映射关系，ICMP协议进行故障定位与网络中简单的管理功能，IGMP协议支持在网络中的多播通信</p><h3 id="网络接口层">网络接口层</h3><p>没有明确的约束，ATM、X.25、帧中继、以太网、FDDI等支持IP协议的都可以接入进来</p><p><img src="1.4-3.png" /></p><p>常用讨论的模型：物理层、数据链路层、网络层、传输层、应用层</p><h2 id="网络性能参数">1.5 网络性能参数</h2><p>带宽也和速率单位相同 bit/s，吞吐量指的是有效数据的速率</p><p>时延分为发送（取决于分组长度与额定速率）、传播（取决于物理距离、介质）、处理（主机或路由器处理的过程）、排队、接入（取决于信道使用权）时延，</p><p>时延带宽积=传播时延×带宽，又称以bit为单位的链路长度</p><p>时延抖动：由于数据分组交换，所走路径不同时延不同，克服的方法是利用缓存，但会增加时延（看视频开在缓存加载就是这个道理）</p><p>往返时间（RTT）：也称ping时间，对实现可靠通信非常重要，用于计算重传时间，算短了可能造成网络拥塞，算长了可能导致可靠性下降</p><p>信道利用率：发送方在一个发送周期的时间内，有效的发送数据所需要的时间占整个发送周期的比率，网络利用率是全网络的信道利用率的加权平均值<span class="math display">\[D=\frac{D_0}{1-U}\]</span> $ D_0 $为网络空闲时的时延，U是网络利用率</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-10 校赛WP</title>
      <link href="/2023/11/08/%E6%A0%A1%E8%B5%9BWP/"/>
      <url>/2023/11/08/%E6%A0%A1%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<h1 id="misc">Misc</h1><h2 id="你好来签到的旅行者">你好，来签到的旅行者</h2><p>微信公众号发送flag获得</p><p><img src="EF5AD68201DA7EED949F8D3462390D18.jpg" /></p><h2 id="纯黑的噩梦">纯黑的噩梦</h2><p>docx文件本质是压缩包，改后缀为.zip打开</p><p>在word-media中可以查看word中的图片文件</p><p><del>第一张图片是出题人小黑子证明</del>，第二张是所有的黑图，第三张是flag</p><p><img src="image3.png" /></p><h2 id="踩踩我的图">踩踩我的图</h2><p>首先是图片隐写题常见思路，binwalk一下，发现里面果然有秘密</p><p><img src="7.png" /></p><p>根据题目文件夹名与提示，搜索Picsel关键词，发现符合“合二为一”“军用级加密”的软件为</p><p><strong>SSuite Picsel Security</strong>（不得不说misc的涉猎确实广</p><p>下载软件并合并两图片得到flag</p><p><img src="8.png" /></p><h2 id="ezpcapng">ezpcapng</h2><p>pcapng文件，用wireshark打开，发现显目的GET /tmp/sql/sql4.php HTTP/1.1条目</p><p><img src="QQ图片20231025000650.png" /></p><p>意识到本题考查的是sql注入，先过滤http数据包，发现很多条注入记录，考虑是sql盲注</p><figure><img src="QQ截图20231025001515.png" alt="QQ截图20231025001515" /><figcaption aria-hidden="true">QQ截图20231025001515</figcaption></figure><p>前面是一些猜解库名、表名等的注入，找到猜解flag的注入起点</p><p><img src="123.png" /></p><p>ASCII码值为102的字符为f，向下检查，四个字符为flag，就是这里没错，接着向下查找，列写出最终flag</p><p>（当然有能力可以写个脚本依次提取所有字符，本人是一个个列出来的</p><h1 id="crypto">Crypto</h1><h2 id="matryoshka-doll">Matryoshka-doll</h2><p>访问实例得到字符串</p><p>LJCGG6SMLBXXQZLHOBYVSVDLPJGFQ2ZQJRLVCMCZPJJGUZSYNQ3U26S2NJMTG4DILFUTAMSNPJETEWSYNMYFSV2FGVGVCPJ5</p><p>分析source.py代码逻辑</p><p><img src="1.png" /></p><p>凯撒移位位数为1至25的随机数，栅栏宽度为2至10的随机数，然后是base64加密与base32加密</p><p>需要注意的是，根据函数名rail_fence也可以注意到，这里的栅栏密码是W型变种</p><p>了解以上之后，通过在线解密网站可以解出base64加密前字符串</p><p>d73-z1zja93-y4-d4c4c}y{36cczab-6326ey4aa91</p><p>枚举解密栅栏</p><p><img src="2.png" /></p><p>找到符合XXXX{XXXXXXX···}格式的密文，再Caeser枚举得到flag</p><p><img src="3.png" /></p><p>（吐槽一下出题人写的脚本</p><p><img src="XYGLRPHNK3@TJ4%7D6ZV%60%7BYSC.png" /></p><h1 id="pwn">Pwn</h1><h2 id="签到">签到</h2><p>根据要求，在linux环境下nc ctf.qwq.cc 端口号即可获得flag</p><h2 id="红包题1024">红包题！1024！</h2><p>本人<del>不怎么会</del>根本不会pwn，把1024完成了获得shell</p><p>ls下发现flag</p><p>cat flag查看flag内容</p><h1 id="web">Web</h1><h2 id="checkin">checkin</h2><p>访问实例，<del>果然又是原神</del>，虽然不是web手，但也知道web手的核心要义是网页源代码</p><p>F12发现开发者工具快捷键被ban了，右键发现也被ban了</p><p>还好还有一招，在网址前添加view-source:查看源代码，发现flag</p><figure><img src="QQ图片20231025010640.png" alt="QQ图片20231025010640" /><figcaption aria-hidden="true">QQ图片20231025010640</figcaption></figure><h2 id="ezphp">ezphp</h2><p>代码审计</p><p><img src="QQ图片20231025011102.png" /></p><p>发现可以数组绕过md5验证，通过Filter伪协议读取源码</p><p>需要注意读取形式选择base64编码，否则根据if(strstr($res,"flag"))die("DaMie!")会无法正常回显flag</p><p>网址后补充：</p><p>&amp;username[]=0&amp;password[]=1&amp;url=php://filter/read=convert.base64-encode/resource=&amp;target=/../../../../flag</p><p>得到源码（base64编码后）</p><p><img src="QQ图片20231025012331.png" /></p><p>base64解码得到flag</p><h1 id="reverse">Reverse</h1><h2 id="check_in">321check_in</h2><p>下载附件打开，发现.exe文件甚至没有办法运行，出现闪退的情况</p><p>结合题目提示，查壳发现，.exe文件应该是用exe4j打包的</p><p><img src="11.png" /></p><p>下载exe4j正常运行程序，那么为什么一定要正常运行程序呢？</p><p>因为java反编译的工具不能直接反编译exe文件，需要得到class文件或者jar包</p><p>而通过exe4j打包的exe程序在exe运行时会在...jar的缓存文件</p><p>（虽然但是，我并没有找到attachment.jar</p><p>但是根据文件生成时间，在e4jD82C.tmp_dir1698213950文件夹下找到了readme.jar</p><p><img src="12.png" /></p><p>用jd-gui反编译readme.jar，在主函数中发现flag</p><p><img src="13.png" /></p><h2 id="babyida">babyida</h2><p>查壳，无壳32位程序，ida32打开，结合题目提示，在字符串窗口中查找flag，发现一个假的flag</p><p><img src="14.png" /></p><p>题目提示学下动调秒了，于是动态调试看看，用x32dbg打开，找到Can youfind the flag?关键字符串处</p><p><img src="15.png" /></p><p>其实这个地方下面已经看到flag了，但别直接列写当flag了，还是得动调一下（别问我怎么知道的</p><p>接着往下分析，在00A21467处发现关键判断语句 jne babyida.A2147B</p><p><img src="16.png" /></p><p>说明若上一句cmp的结果为不相等，会跳转至00A2147B，输出“wrong!”</p><p>根据上面一大堆的汇编指令大致可以看到，进行比较的字符串（即目标flag）存储在几个寄存器中</p><p>直接在00A2147B处添加断点，让程序运行到这先别跳转，然后查看寄存器的值</p><p>运行程序，F9程序停在00A2147B处，在eax中发现flag值</p><p><img src="17.png" /></p><p>（一点也不baby</p><h2 id="ez_z3">ez_z3</h2><p>查壳，64位UPX壳，upx -d脱壳，发现居然报错了</p><p><img src="QQ图片20231025152958.png" /></p><p>面向搜索引擎，发现是文件加壳之后又进行了混淆，发现确实如此，区段名进行了更改</p><p><img src="18.png" /></p><p>于是010editor打开文件，把文件里的XYU全部改成UPX，再upx-d，脱壳成功</p><p><img src="QQ图片20231025161939.png" /></p><p>拖入ida查看，分析各函数的大致作用，然后可以先用z3约束求解器解出数据，脚本如下</p><p>脚本原文链接：<ahref="https://ctttttttt.github.io/2023/03/26/57/#分析">NSSCTF-RoundXeasy_z3 | 逆向上分之路 (ctttttttt.github.io)</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">a1 = [BitVec(<span class="string">&quot;num[%d]&quot;</span> % i, <span class="number">32</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>)]</span><br><span class="line">s = Solver()</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">    + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">    + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">    + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">    + <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">    + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">    + a1[<span class="number">0</span>]</span><br><span class="line">+ <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">- <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">- <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">- <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">+ <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">- <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">- <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">- <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">- <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">- <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">2582239</span>)</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">    + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">    + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">    + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">    + <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">    - <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">    + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">    - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">    + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">    + <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">    + <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">    - <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">    - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">    - <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">    - (<span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">       + <span class="number">17</span> * a1[<span class="number">16</span>]) == <span class="number">2602741</span>)</span><br><span class="line">s.add(<span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>] * <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">12</span> * a1[<span class="number">11</span>] * <span class="number">11</span> * a1[<span class="number">10</span>]</span><br><span class="line">     + <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     + <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     - <span class="number">4</span> * a1[<span class="number">3</span>] * <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     - <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     - <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>] * <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">     - <span class="number">20</span> * a1[<span class="number">19</span>] == <span class="number">2668123</span>)</span><br><span class="line">s.add(<span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + (<span class="number">13</span> * a1[<span class="number">12</span>] + <span class="number">11</span> * a1[<span class="number">10</span>] - <span class="number">12</span> * a1[<span class="number">11</span>]) * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     - <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     - <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">     - <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">2520193</span>)</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">    + <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">    + <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">    + <span class="number">13</span> * a1[<span class="number">12</span>] * <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">    + <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">    + <span class="number">9</span> * a1[<span class="number">8</span>] * <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">    + <span class="number">3</span> * a1[<span class="number">2</span>] * <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">    - <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">    - <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">    - <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">    - <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">    - <span class="number">11</span> * a1[<span class="number">10</span>]</span><br><span class="line">    - <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">    - <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">    - <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">    - <span class="number">20</span> * a1[<span class="number">19</span>] == <span class="number">8904587</span>)</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">    + <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>] * <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">    + <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">    + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">    + a1[<span class="number">0</span>]</span><br><span class="line">- <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">- <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">- <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">- <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">- <span class="number">16</span> * a1[<span class="number">15</span>] * (<span class="number">13</span> * a1[<span class="number">12</span>] + <span class="number">12</span> * a1[<span class="number">11</span>] - <span class="number">14</span> * a1[<span class="number">13</span>] - <span class="number">15</span> * a1[<span class="number">14</span>])</span><br><span class="line">- <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">- <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">- <span class="number">20</span> * a1[<span class="number">19</span>] == <span class="number">1227620874</span>)</span><br><span class="line">s.add(<span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">12</span> * a1[<span class="number">11</span>] * <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     + <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">1836606059</span>)</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">    + <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">    + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">    + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">    + <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">    + <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">    + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">    + <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">    - <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">    + <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">    + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">    - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">    - <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">    - <span class="number">11</span> * a1[<span class="number">10</span>]</span><br><span class="line">    - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">    - <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">8720560</span>)</span><br><span class="line">s.add(<span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>] * (<span class="number">10</span> * a1[<span class="number">9</span>] + <span class="number">30</span> * a1[<span class="number">5</span>] + <span class="number">5</span> * a1[<span class="number">4</span>] + <span class="number">4</span> * a1[<span class="number">3</span>] - <span class="number">7</span> * a1[<span class="number">6</span>] + <span class="number">8</span> * a1[<span class="number">7</span>] - <span class="number">9</span> * a1[<span class="number">8</span>])</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     - <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     - (<span class="number">16</span> * a1[<span class="number">15</span>] - <span class="number">17</span> * a1[<span class="number">16</span>] - <span class="number">18</span> * a1[<span class="number">17</span>]) * <span class="number">15</span> * a1[<span class="number">14</span>] == <span class="number">11387045</span>)</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">    + <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">    + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">    + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">    + <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">    + <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">    + a1[<span class="number">0</span>]</span><br><span class="line">- <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">+ <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">- <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">- <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">- <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">+ <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">- <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">- <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">- <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">- <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">7660269</span>)</span><br><span class="line">s.add(<span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     - (<span class="number">4</span> * a1[<span class="number">3</span>] * <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">      - <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">      - <span class="number">30</span> * a1[<span class="number">5</span>])</span><br><span class="line">     - <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">2461883</span>)</span><br><span class="line">s.add(</span><br><span class="line">    <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">    + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">    + <span class="number">9</span> * a1[<span class="number">8</span>] * <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">    + <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">    + <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">    - <span class="number">4</span> * a1[<span class="number">3</span>] * <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">    - <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">    - <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">    - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">    - <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">    - <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">    - <span class="number">17</span> * a1[<span class="number">16</span>] * <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">    - <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">    - <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">    - <span class="number">20</span> * a1[<span class="number">19</span>] == -<span class="number">966296</span>)</span><br><span class="line"></span><br><span class="line">s.add(</span><br><span class="line"><span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + (<span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>] + <span class="number">30</span> * a1[<span class="number">5</span>] + <span class="number">5</span> * a1[<span class="number">4</span>] + <span class="number">3</span> * a1[<span class="number">2</span>] + <span class="number">4</span> * a1[<span class="number">3</span>] - <span class="number">7</span> * a1[<span class="number">6</span>] + <span class="number">8</span> * a1[<span class="number">7</span>] - <span class="number">9</span> * a1[<span class="number">8</span>])</span><br><span class="line">     * <span class="number">2</span></span><br><span class="line">     * a1[<span class="number">1</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     - <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">     - <span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>] == <span class="number">254500223</span></span><br><span class="line">    )</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     - <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     - <span class="number">5</span> * a1[<span class="number">4</span>] * <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     - <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">     - <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     - <span class="number">20</span> * a1[<span class="number">19</span>] == <span class="number">6022286</span></span><br><span class="line">    )</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">     + <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     + <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + <span class="number">4</span> * a1[<span class="number">3</span>] * <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>] * <span class="number">8</span> * a1[<span class="number">7</span>] * <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">     - <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     - <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     - <span class="number">20</span> * a1[<span class="number">19</span>] == -<span class="number">636956022</span></span><br><span class="line">    )</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">     + <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + <span class="number">3</span> * a1[<span class="number">2</span>] * <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>] * <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     - <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">10631829</span></span><br><span class="line">)</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">     + <span class="number">15</span> * a1[<span class="number">14</span>] * <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>] * <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     - <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     + <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">     + (<span class="number">4</span> * a1[<span class="number">3</span>] - <span class="number">5</span> * a1[<span class="number">4</span>] - <span class="number">30</span> * a1[<span class="number">5</span>]) * <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>] == <span class="number">6191333</span></span><br><span class="line">)</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     + <span class="number">10</span> * a1[<span class="number">9</span>] * <span class="number">9</span> * a1[<span class="number">8</span>] * <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     + <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + <span class="number">4</span> * a1[<span class="number">3</span>] * <span class="number">3</span> * a1[<span class="number">2</span>]</span><br><span class="line">     + <span class="number">2</span> * a1[<span class="number">1</span>] * a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     - <span class="number">11</span> * a1[<span class="number">10</span>]</span><br><span class="line">     - <span class="number">13</span> * a1[<span class="number">12</span>] * <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>] * <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>] == <span class="number">890415359</span></span><br><span class="line">)</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">20</span> * a1[<span class="number">19</span>]</span><br><span class="line">     + <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">18</span> * a1[<span class="number">17</span>]</span><br><span class="line">     + <span class="number">16</span> * a1[<span class="number">15</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     + <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     + <span class="number">11</span> * a1[<span class="number">10</span>]</span><br><span class="line">     + <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     + <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     + <span class="number">4</span> * a1[<span class="number">3</span>] * <span class="number">3</span> * a1[<span class="number">2</span>] * <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     - <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     - <span class="number">7</span> * a1[<span class="number">6</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>]</span><br><span class="line">     - <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     - <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     - <span class="number">15</span> * a1[<span class="number">14</span>] == <span class="number">23493664</span></span><br><span class="line">)</span><br><span class="line">s.add(</span><br><span class="line"><span class="number">20</span> * a1[<span class="number">19</span>] * <span class="number">19</span> * a1[<span class="number">18</span>]</span><br><span class="line">     + <span class="number">13</span> * a1[<span class="number">12</span>]</span><br><span class="line">     + <span class="number">12</span> * a1[<span class="number">11</span>]</span><br><span class="line">     + <span class="number">10</span> * a1[<span class="number">9</span>]</span><br><span class="line">     + <span class="number">3</span> * a1[<span class="number">2</span>] * <span class="number">2</span> * a1[<span class="number">1</span>]</span><br><span class="line">     + a1[<span class="number">0</span>]</span><br><span class="line">     - <span class="number">4</span> * a1[<span class="number">3</span>]</span><br><span class="line">     - <span class="number">5</span> * a1[<span class="number">4</span>]</span><br><span class="line">     + <span class="number">8</span> * a1[<span class="number">7</span>] * <span class="number">7</span> * a1[<span class="number">6</span>] * <span class="number">30</span> * a1[<span class="number">5</span>]</span><br><span class="line">     - <span class="number">9</span> * a1[<span class="number">8</span>]</span><br><span class="line">     - <span class="number">11</span> * a1[<span class="number">10</span>]</span><br><span class="line">     - <span class="number">14</span> * a1[<span class="number">13</span>]</span><br><span class="line">     - <span class="number">16</span> * a1[<span class="number">15</span>] * <span class="number">15</span> * a1[<span class="number">14</span>]</span><br><span class="line">     - <span class="number">17</span> * a1[<span class="number">16</span>]</span><br><span class="line">     - <span class="number">18</span> * a1[<span class="number">17</span>] == <span class="number">1967260144</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(s.check())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a1:</span><br><span class="line">    <span class="built_in">print</span>(s.model()[i].as_long(), end=<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="comment">#跑出来的结果是[104,97,104,97,104,97,116,104,105,115,105,115,102,97,99,107,102,108,97,103]</span></span><br></pre></td></tr></table></figure><p>得到参数，写脚本得到flag</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">DWORD <span class="title function_">Get_254D0</span><span class="params">(DWORD d254D0[<span class="number">20</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">DWORD d25050[<span class="number">20</span>] = &#123;<span class="number">0X1207</span>,<span class="number">0X4CA0</span>,<span class="number">0X4F21</span>,<span class="number">0X39</span>,<span class="number">0X1A523</span>,<span class="number">0X23A</span>,<span class="number">0X926</span>,<span class="number">0X4CA7</span>,</span><br><span class="line"><span class="number">0X6560</span>,<span class="number">0X36</span>,<span class="number">0X1A99B</span>,<span class="number">0X4CA8</span>,<span class="number">0X1BBE0</span>,<span class="number">0X3705</span>,<span class="number">0X926</span>,<span class="number">0X77D3</span>,</span><br><span class="line"><span class="number">0X9A98</span>,<span class="number">0X657B</span>,<span class="number">0X18</span>,<span class="number">0X0B11</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>( i ; i &lt; <span class="number">20</span> ; i++)</span><br><span class="line">&#123;</span><br><span class="line">d254D0[i] = d25050[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DWORD <span class="title function_">Get_25520</span><span class="params">(DWORD d25520[<span class="number">20</span>], DWORD d254D0[<span class="number">20</span>],DWORD a[<span class="number">20</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> i = <span class="number">0</span>; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="type">int</span> v2 = i;</span><br><span class="line">    <span class="keyword">if</span> ( v2 &gt;= <span class="number">20</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">   <span class="type">int</span> v3 = i;</span><br><span class="line">    d25520[v3] = *(a + <span class="number">20</span> - i - <span class="number">1</span>) ^ d254D0[i]; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DWORD <span class="title function_">sub_1124E</span><span class="params">(DWORD a1, DWORD a2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v3; </span><br><span class="line">  v3 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> ( a2 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( (a2 &amp; <span class="number">1</span>) != <span class="number">0</span> )</span><br><span class="line">      v3 *= a1;</span><br><span class="line">    a1 = a1 * a1 % <span class="number">1000</span>;</span><br><span class="line">    a2 &gt;&gt;= <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">DWORD a[<span class="number">20</span>] = &#123;<span class="number">104</span>,<span class="number">97</span>,<span class="number">104</span>,<span class="number">97</span>,<span class="number">104</span>,<span class="number">97</span>,<span class="number">116</span>,<span class="number">104</span>,<span class="number">105</span>,<span class="number">115</span>,<span class="number">105</span>,<span class="number">115</span>,<span class="number">102</span>,<span class="number">97</span>,<span class="number">99</span>,<span class="number">107</span>,<span class="number">102</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">103</span>&#125;;</span><br><span class="line">DWORD d254D0[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">DWORD d25520[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">DWORD d25000[<span class="number">20</span>] = &#123; <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, </span><br><span class="line"> <span class="number">0x09</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x05</span>, <span class="number">0x07</span>,</span><br><span class="line"> <span class="number">0x09</span>, <span class="number">0x07</span>&#125;;</span><br><span class="line">DWORD Str[<span class="number">20</span>];</span><br><span class="line">DWORD v3;</span><br><span class="line"></span><br><span class="line">Get_254D0(d254D0);</span><br><span class="line">Get_25520(d25520,d254D0,a);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里用的是爆破的方法</span></span><br><span class="line"><span class="keyword">for</span>(DWORD p = <span class="number">0</span> ; p &lt; <span class="number">20</span> ; p++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>( DWORD k = <span class="number">0</span> ; k &lt; <span class="number">127</span> ; k++)</span><br><span class="line">&#123;</span><br><span class="line">Str[p] = k;</span><br><span class="line"><span class="keyword">if</span>( d25520[p] == sub_1124E(Str[p], d25000[p]) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,k);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//T1e_z3_1s_v1r9_3asy!</span></span><br></pre></td></tr></table></figure><h2 id="base64">base64</h2><p>ida64打开，一眼看去像是base64编码格式的字符串，但直接base64解码显然不行</p><p><img src="5.png" /></p><p>题目提示需要修复base64编码，还需要运行linux命令</p><p>但幸运的事发生了！</p><p>做re题的习惯性做法，先查看字符串列表，直接发现了...</p><p><img src="4.png" /></p><p>这个就是base64替换的新表，上脚本，运行得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;ZXFWtmKgDZCyrmC5B+CiVfsyXUCQVfsyZRFzDU4yX2YCD/F5Ih8=&quot;</span></span><br><span class="line"></span><br><span class="line">string1 = <span class="string">&quot;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbn/+m1234567890&quot;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1,string2))))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="A.png" /></p><h2 id="odscript">odscript</h2><p>查壳，32位无壳，运行一下发现是弹窗输入注册码，随便输提示有错误，<del>然后再读读曹操身边的故事</del></p><p>输入注册码，显示结果都是以弹窗的形式，可以尝试去寻找Messagebox函数</p><p>ida打开，发现sub_4016E0和sub_401720中都有调用Messagebox函数</p><p><img src="QQ图片20231025202407.png" /></p><p>可以合理猜测是两个结果的弹窗，一个是显示正确，一个是显示错误</p><p>在x32dbg里这两处都下断点，随机输入注册码，发现程序停在sub_401720处，无弹窗，再F9出现错误弹窗，确定想法是对的</p><p>于是看sub_4016E0，通过IDA交叉引用看到，.text:00401617引用了该函数</p><p>来到.text:00401617</p><p><img src="QQ截图20231025205445.png" /></p><p>看到一些关键函数</p><p><img src="QQ截图20231025205708.png" /></p><p>跟进，发现是正是sub_401630调用了CString::CString函数</p><p><img src="QQ截图20231025210102.png" /></p><p>阅读代码，大致意思是判断a2指向的一段内存和this指向的一段内存是否相等</p><p>那么调试时停在sub_401630处F7单步即可查看里面的内容</p><p>那么问题来了</p><p>上面试过，随便输的注册码，即使在sub_401630处添加了断点，F9也是停在sub_401720处</p><p>说明上方还有跳转，直接跳过sub_401630起的正确弹窗区域，跳到sub_401720错误弹窗去了</p><p>向上查看，果然有问题</p><p><img src="QQ截图20231025212258.png" /></p><p>阅读最上面红框内容，知道需要满足输入的字符串长度为0x21，即33个字符</p><p>得到以上信息，就可以开始调试了，x32dbg打开</p><p>在00401630处设置断点，F9，输入随机的长度为33字符的字符串</p><p>程序停在00401630处，F7单步步入，跳转比较函数后发现flag</p><p><img src="QQ截图20231025213613.png" /></p><p><img src="QQ截图20231025213750.png" /></p><p>（或者我写wp的时候才发现00401666处已经有了</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WP </tag>
            
            <tag> 校赛 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
